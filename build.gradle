/*
 * SPDX-License-Identifier: MIT
 *
 * Copyright (c) 2020-2021 Andres Almiray.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
plugins {
    id 'java-library'
    id 'groovy'
    id 'idea'
    id 'org.kordamp.gradle.groovy-project'
    id 'org.kordamp.gradle.plugin'
    id 'com.github.johnrengelman.shadow'
}

config {
    info {
        name          = rootProject.name
        description   = 'Gradle plugin for JBang'
        inceptionYear = '2020'
        tags          = ['jbang']

        specification { enabled = false }
    }

    licensing {
        licenses {
            license {
                id = 'MIT'
                primary = true
            }
        }
    }

    docs {
        groovydoc {
            replaceJavadoc = true
        }
    }

    plugins {
        plugin {
            name                = 'jbang'
            id                  = 'dev.jbang'
            implementationClass = 'dev.jbang.gradle.JBangPlugin'
        }
    }

    bintray {
        enabled = false
    }
}

repositories {
    mavenCentral()
    gradlePluginPortal()
    flatDir { dir 'libs' }
    mavenLocal()
}

configurations {
    uberjar
}

dependencies {
    compileOnly gradleApi()

    api "org.kordamp.gradle:base-gradle-plugin:$kordampPluginVersion"
    api 'org.zeroturnaround:zt-exec:1.12'
    api 'org.apache.commons:commons-compress:1.20'
    api "commons-io:commons-io:$commonsIoVersion"
    uberjar ':gradle-wrapper:6.8.3'

    testImplementation('org.spockframework:spock-core:1.3-groovy-2.5') {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
        exclude group: 'junit', module: 'junit'
    }
    testImplementation 'cglib:cglib-nodep:3.3.0'
    testImplementation 'org.objenesis:objenesis:3.1'
}

processResources {
    inputs.property('version', project.version)
    filesMatching(['**/*.properties']) {
        expand(
            'version': project.version,
            'id'     : 'jbang',
            'name'   : 'JBang Gradle plugin'
        )
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

sourceSets {
    main {
        compileClasspath += configurations.uberjar
        runtimeClasspath += compileClasspath
    }
}

idea {
    module {
        scopes.PROVIDED.plus += [configurations.uberjar]
    }
}

shadowJar {
    configurations    = [project.configurations.uberjar]
    archiveBaseName   = project.name
    archiveClassifier = ''
    relocate 'org.gradle.wrapper', 'shaded.org.gradle.wrapper'
    exclude 'gradle-wrapper-classpath.properties'
    exclude 'gradle-wrapper-parameter-names.properties'
    exclude 'gradle-cli-classpath.properties'
    exclude 'gradle-cli-parameter-names.properties'
    exclude 'org/gradle/cli/**'
}

jar.finalizedBy shadowJar
